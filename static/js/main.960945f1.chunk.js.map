{"version":3,"sources":["components/Categories.js","components/NewsItem.js","components/NewsList.js","lib/usePromise.js","pages/NewsPage.js","App.js","reportWebVitals.js","index.js"],"names":["categories","name","text","CategoriesBlock","styled","div","Category","NavLink","Categories","onSelect","category","map","c","activeClassName","exact","to","NewsItemBlock","NewsItem","article","title","description","url","urlToImage","className","href","target","rel","src","alt","NewsListBlock","NewsList","promiseCreator","deps","useState","loading","setloading","resolved","setresolved","error","seterror","useEffect","a","process","usePromise","query","axios","get","response","articles","data","NewsPage","match","params","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.960945f1.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst categories = [\r\n    {\r\n        name: 'all',\r\n        text: '전체보기'\r\n    },\r\n    {\r\n        name: 'business',\r\n        text: '비즈니스'\r\n    },\r\n    {\r\n        name: 'entertainment',\r\n        text: '엔터테인먼트'\r\n    },\r\n    {\r\n        name: 'health',\r\n        text: '건강'\r\n    },\r\n    {\r\n        name: 'science',\r\n        text: '과학'\r\n    },\r\n    {\r\n        name: 'sports',\r\n        text: '스포츠'\r\n    },\r\n    {\r\n        name: 'technology',\r\n        text: '기술'\r\n    },\r\n];\r\n\r\nconst CategoriesBlock = styled.div`\r\n    display: flex;\r\n    padding: 1rem;\r\n    width: 768px;\r\n    margin: 0 auto;\r\n    @media screen and (max-width: 768px){\r\n        width: 100%;\r\n        overflow-x: auto;\r\n    }\r\n`;\r\n\r\nconst Category = styled(NavLink)`\r\n    font-size: 1.125rem;\r\n    cursor: pointer;\r\n    white-space: pre;\r\n    text-decoration: none;\r\n    color: inherit;\r\n    padding-bottom: 0.25rem;\r\n\r\n    &:hover{\r\n        color: #495047;\r\n    }\r\n\r\n    &.active{\r\n        font-weight: 600;\r\n        border-bottom: 2px solid #22b8cf;\r\n        color: #22b8cf;\r\n        &:hover{\r\n            color: #3bc9db;\r\n        }\r\n    }\r\n\r\n    &+&{\r\n        margin-left: 1rem;\r\n    }\r\n`;\r\n\r\nconst Categories = ({onSelect, category}) => {\r\n    return (\r\n        <CategoriesBlock>\r\n            {categories.map(c => (\r\n                <Category \r\n                    key={c.name}\r\n                    activeClassName=\"active\"\r\n                    exact={c.name === 'all'}\r\n                    to={c.name === 'all' ? '/' : `/${c.name}`}\r\n                >\r\n                    {c.text}\r\n                </Category>\r\n            ))}\r\n        </CategoriesBlock>\r\n    );\r\n};\r\n\r\nexport default Categories;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst NewsItemBlock = styled.div`\r\n    display: flex;\r\n    .thumbnail{\r\n        margin-right: 1rem;\r\n        img{\r\n            display: block;\r\n            width: 160px;\r\n            height: 100px;\r\n            object-fit: cover;\r\n        }\r\n    }\r\n\r\n    .contents{\r\n        h2{\r\n            margin: 0;\r\n            a{\r\n                color: black;\r\n            }\r\n        }\r\n        p{\r\n            margin: 0;\r\n            line-height: 1.5;\r\n            margin-top: 0.5rem;\r\n            white-space: normal;\r\n        }\r\n    }\r\n\r\n    &+&{\r\n        margin-top: 3rem;\r\n    }\r\n`;\r\n\r\nconst NewsItem = ({article}) => {\r\n    const {title, description, url, urlToImage} = article;\r\n    return(\r\n        <NewsItemBlock>\r\n            {urlToImage && (\r\n                <div className=\"thumbnail\">\r\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <img src={urlToImage} alt=\"thumbnail\" />\r\n                    </a>\r\n                </div>\r\n            )}\r\n            <div className=\"contents\">\r\n                <h2>\r\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        {title}\r\n                    </a>\r\n                </h2>\r\n                <p>{description}</p>\r\n            </div>\r\n        </NewsItemBlock>\r\n    )\r\n}\r\n\r\nexport default NewsItem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport NewsItem from './NewsItem';\r\nimport axios from 'axios';\r\nimport usePromise from '../lib/usePromise';\r\n\r\nconst NewsListBlock = styled.div`\r\n    box-sizing: border-box;\r\n    padding-bottom: 3rem;\r\n    width: 768px;\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n    @media screen and (max-width: 768px){\r\n        width: 100%;\r\n        padding-left: 1rem;\r\n        pading-right: 1rem;\r\n    }\r\n`;\r\n\r\nconst NewsList = ({category}) => {\r\n    const [loading, response, error] = usePromise(() => {\r\n        const query = category === 'all' ? '' : `&category=${category}`;\r\n        return axios.get(\r\n            `https://newsapi.org/v2/top-headlines?country=kr${query}&apiKey=49d2de740ca642159e2fe1515ce06a19`,\r\n        );\r\n    }, [category]);\r\n    \r\n    //대기 중일 때\r\n    if(loading){\r\n        return <NewsListBlock>대기 중...</NewsListBlock>;\r\n    }\r\n\r\n    //아직 response 값이 설정되지 않았을 때\r\n    if(!response){\r\n        return null;\r\n    }\r\n\r\n    //error가 발생했을 때\r\n    if(error){\r\n        return <NewsListBlock>에러 발생!</NewsListBlock>\r\n    }\r\n\r\n    //response 값이 유효할  때\r\n    const {articles} = response.data;\r\n\r\n    return(\r\n        <NewsListBlock>\r\n            {articles.map(article => (\r\n                <NewsItem key={article.url} article={article} />\r\n            ))}\r\n        </NewsListBlock>\r\n    )\r\n}\r\n\r\nexport default NewsList;","import {useState, useEffect} from 'react';\r\n\r\nexport default function usePromise(promiseCreator, deps){\r\n    //대기 중/완료/실패에 대한 상태 관리\r\n    const [loading, setloading] = useState(false);\r\n    const [resolved, setresolved] = useState(null);\r\n    const [error, seterror] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const process = async () => {\r\n            setloading(true);\r\n            try{\r\n                const resolved = await promiseCreator();\r\n                setresolved(resolved);\r\n            }catch(e){\r\n                seterror(e);\r\n            }\r\n            setloading(false);\r\n        };\r\n        process();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, deps);\r\n    return [loading, resolved, error];\r\n}\r\n","import React from 'react';\r\nimport Categories from '../components/Categories';\r\nimport NewsList from '../components/NewsList';\r\n\r\nconst NewsPage = ({match}) => {\r\n    //카테고리가 선택되지 않았으면 기본값 all로 사용\r\n    const category = match.params.category || 'all';\r\n\r\n    return(\r\n        <>\r\n        <Categories />\r\n        <NewsList category={category} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewsPage;","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport NewsPage from './pages/NewsPage';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Route path=\"/:category?\" component={NewsPage} />\r\n  )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}